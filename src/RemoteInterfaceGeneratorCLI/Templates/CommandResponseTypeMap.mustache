namespace {{rootNamespace}}{{#newline}}
{{{#newline}}
    using System;{{#newline}}
    using System.Collections.Generic;{{#newline}}
{{#newline}}
    public static class CommandResponseTypeMap{{#newline}}
    {{{#newline}}
        private readonly static IDictionary<Type, Type> s_commandResponseTypeDictionary;{{#newline}}
{{#newline}}
        static CommandResponseTypeMap(){{#newline}}
        {{{#newline}}
            s_commandResponseTypeDictionary = new Dictionary<Type, Type>(){{#newline}}
            {{{#newline}}
{{#each commands}}
                { typeof({{FullTypeName}}), typeof({{FullTypeName}}Response) },{{#newline}}
{{/each}}
            };{{#newline}}
        }{{#newline}}
{{#newline}}
        /// <summary>{{#newline}}
        /// Gets the command response type corresponding to the specified command type{{#newline}}
        /// </summary>{{#newline}}
        public static bool TryGetCommandResponseType<T>(out Type commandResponseType){{#newline}}
            where T : ICommand{{#newline}}
        {{{#newline}}
            return s_commandResponseTypeDictionary.TryGetValue(typeof(T), out commandResponseType);{{#newline}}
        }{{#newline}}
    }{{#newline}}
}{{#newline}}